{"version":3,"sources":["App.tsx","registerServiceWorker.ts","index.tsx"],"names":["Suit","Value","suits","Clubs","Diamonds","Hearts","Spades","values","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Jack","Queen","King","Ace","Card","v","s","this","value","suit","prototype","toString","strVal","Map","strSuit","get","equals","other","StartingHand","v1","v2","suited","value1","value2","sh","thisLower","thisUpper","shLower","shUpper","_a","_b","SklanskyTable","1","2","3","4","5","6","7","8","getSklanskyValue","hand","rank","hands","h","length","AnswerPanel","props","selected","react","className","onClick","onClickHandler","disabled","has","type","checked","onChange","onChangeHandler","MessagePanel","classSuffix","message","src_App_0","_super","App","_this","call","Set","add","state","card1","card2","answer","undefined","tslib_es6","resetHand","handleUserInput","bind","handleSelectChange","handleKeyPress","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","event","console","log","keyCode","code","setState","val","size","alert","delete","Math","floor","random","render","src","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","react_dom","getElementById","URL","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c223be7b.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport './App.css';\r\n\r\n// Model\r\n\r\nenum Suit {\r\n    Clubs = 1,\r\n    Diamonds,\r\n    Hearts,\r\n    Spades\r\n}\r\n\r\nconst suits: Array<Suit> = [Suit.Clubs, Suit.Diamonds, Suit.Hearts, Suit.Spades];\r\n\r\nenum Value {\r\n    Two = 2, Three, Four, Five, Six, Seven,\r\n    Eight, Nine, Ten, Jack, Queen, King, Ace\r\n}\r\n\r\nconst values: Array<Value> = [Value.Two, Value.Three, Value.Four, Value.Five, Value.Six, Value.Seven,\r\nValue.Eight, Value.Nine, Value.Ten, Value.Jack, Value.Queen, Value.King, Value.Ace];\r\n\r\nclass Card {\r\n    value: Value;\r\n    suit: Suit;\r\n    constructor(v: Value, s: Suit) {\r\n        this.value = v;\r\n        this.suit = s;\r\n    }\r\n    toString(): string {\r\n        const strVal = new Map<number, string>([\r\n            [Value.Two, \"2\"],\r\n            [Value.Three, \"3\"],\r\n            [Value.Four, \"4\"],\r\n            [Value.Five, \"5\"],\r\n            [Value.Six, \"6\"],\r\n            [Value.Seven, \"7\"],\r\n            [Value.Eight, \"8\"],\r\n            [Value.Nine, \"9\"],\r\n            [Value.Ten, \"10\"],\r\n            [Value.Jack, \"J\"],\r\n            [Value.Queen, \"Q\"],\r\n            [Value.King, \"K\"],\r\n            [Value.Ace, \"A\"],\r\n        ]);\r\n\r\n        const strSuit = new Map<number, string>([\r\n            [Suit.Clubs, \"C\"],\r\n            [Suit.Diamonds, \"D\"],\r\n            [Suit.Hearts, \"H\"],\r\n            [Suit.Spades, \"S\"],\r\n        ]);\r\n\r\n        return `${strVal.get(this.value)}${strSuit.get(this.suit)}`;\r\n    }\r\n\r\n    equals(other: Card): boolean {\r\n        return this.value === other.value && this.suit === other.suit;\r\n    }\r\n}\r\n\r\nclass StartingHand {\r\n    value1: Value;\r\n    value2: Value;\r\n    suited: boolean;\r\n    constructor(v1: Value, v2: Value, suited: boolean) {\r\n        this.value1 = v1;\r\n        this.value2 = v2;\r\n        this.suited = suited;\r\n    }\r\n\r\n    equals(sh: StartingHand): boolean {\r\n        if (this.suited !== sh.suited) {\r\n            return false;\r\n        }\r\n\r\n        let thisLower = this.value1\r\n        let thisUpper = this.value2\r\n        let shLower = sh.value1\r\n        let shUpper = sh.value2\r\n\r\n        if (thisLower > thisUpper) {\r\n            [thisLower, thisUpper] = [thisUpper, thisLower]\r\n        }\r\n        if (shLower > shUpper) {\r\n            [shLower, shUpper] = [shUpper, shLower]\r\n        }\r\n\r\n        return thisLower === shLower && thisUpper === shUpper;\r\n    }\r\n}\r\n\r\n// encode the Sklansky table (https://en.wikipedia.org/wiki/Texas_hold_%27em_starting_hands)\r\nconst SklanskyTable = {\r\n    1: [\r\n        new StartingHand(Value.Ace, Value.Ace, false),\r\n        new StartingHand(Value.King, Value.King, false),\r\n        new StartingHand(Value.Queen, Value.Queen, false),\r\n        new StartingHand(Value.Jack, Value.Jack, false),\r\n        new StartingHand(Value.Ace, Value.King, true)],\r\n    2: [\r\n        new StartingHand(Value.Ten, Value.Ten, false),\r\n        new StartingHand(Value.Ace, Value.Queen, true),\r\n        new StartingHand(Value.Ace, Value.Jack, true),\r\n        new StartingHand(Value.King, Value.Queen, true),\r\n        new StartingHand(Value.Ace, Value.King, false),\r\n    ],\r\n    3: [\r\n        new StartingHand(Value.Nine, Value.Nine, false),\r\n        new StartingHand(Value.Ace, Value.Ten, true),\r\n        new StartingHand(Value.King, Value.Jack, true),\r\n        new StartingHand(Value.Queen, Value.Jack, true),\r\n        new StartingHand(Value.Jack, Value.Ten, true),\r\n        new StartingHand(Value.Ace, Value.Queen, false),\r\n    ],\r\n    4: [\r\n        new StartingHand(Value.Eight, Value.Eight, false),\r\n        new StartingHand(Value.King, Value.Ten, true),\r\n        new StartingHand(Value.Queen, Value.Ten, true),\r\n        new StartingHand(Value.Jack, Value.Nine, true),\r\n        new StartingHand(Value.Ten, Value.Nine, true),\r\n        new StartingHand(Value.Nine, Value.Eight, true),\r\n        new StartingHand(Value.Ace, Value.Jack, false),\r\n        new StartingHand(Value.King, Value.Queen, false),\r\n    ],\r\n    5: [\r\n        new StartingHand(Value.Seven, Value.Seven, false),\r\n\r\n        // fill in the rest of the suited aces\r\n        new StartingHand(Value.Ace, Value.Nine, true),\r\n        new StartingHand(Value.Ace, Value.Eight, true),\r\n        new StartingHand(Value.Ace, Value.Seven, true),\r\n        new StartingHand(Value.Ace, Value.Six, true),\r\n        new StartingHand(Value.Ace, Value.Five, true),\r\n        new StartingHand(Value.Ace, Value.Four, true),\r\n        new StartingHand(Value.Ace, Value.Three, true),\r\n        new StartingHand(Value.Ace, Value.Two, true),\r\n\r\n        new StartingHand(Value.Queen, Value.Nine, true),\r\n        new StartingHand(Value.Ten, Value.Eight, true),\r\n        new StartingHand(Value.Nine, Value.Seven, true),\r\n        new StartingHand(Value.Eight, Value.Seven, true),\r\n        new StartingHand(Value.Seven, Value.Six, true),\r\n        new StartingHand(Value.King, Value.Jack, false),\r\n        new StartingHand(Value.Queen, Value.Jack, false),\r\n        new StartingHand(Value.Jack, Value.Ten, false),\r\n\r\n\r\n        new StartingHand(Value.Six, Value.Five, true), // TODO: double check this. where does this belong?\r\n    ],\r\n    6: [\r\n        new StartingHand(Value.Six, Value.Six, false),\r\n        new StartingHand(Value.Five, Value.Five, true),\r\n        new StartingHand(Value.King, Value.Nine, true),\r\n        new StartingHand(Value.Jack, Value.Eight, true),\r\n        new StartingHand(Value.Eight, Value.Six, true),\r\n        new StartingHand(Value.Seven, Value.Five, true),\r\n        new StartingHand(Value.Five, Value.Four, true),\r\n        new StartingHand(Value.Ace, Value.Ten, false),\r\n        new StartingHand(Value.King, Value.Ten, false),\r\n        new StartingHand(Value.Queen, Value.Ten, false),\r\n    ],\r\n    7: [\r\n        new StartingHand(Value.Four, Value.Four, false),\r\n        new StartingHand(Value.Three, Value.Three, false),\r\n        new StartingHand(Value.Two, Value.Two, false),\r\n\r\n        // fill in the rest of the suited kings\r\n        new StartingHand(Value.King, Value.Eight, true),\r\n        new StartingHand(Value.King, Value.Seven, true),\r\n        new StartingHand(Value.King, Value.Six, true),\r\n        new StartingHand(Value.King, Value.Five, true),\r\n        new StartingHand(Value.King, Value.Four, true),\r\n        new StartingHand(Value.King, Value.Three, true),\r\n        new StartingHand(Value.King, Value.Two, true),\r\n\r\n        new StartingHand(Value.Queen, Value.Eight, true),\r\n        new StartingHand(Value.Ten, Value.Seven, true),\r\n        new StartingHand(Value.Six, Value.Four, true),\r\n        new StartingHand(Value.Five, Value.Three, true),\r\n        new StartingHand(Value.Four, Value.Three, true),\r\n        new StartingHand(Value.Jack, Value.Nine, false),\r\n        new StartingHand(Value.Ten, Value.Nine, false),\r\n        new StartingHand(Value.Nine, Value.Eight, false),\r\n    ],\r\n    8: [\r\n        new StartingHand(Value.Jack, Value.Seven, true),\r\n        new StartingHand(Value.Nine, Value.Six, true),\r\n        new StartingHand(Value.Eight, Value.Five, true),\r\n        new StartingHand(Value.Seven, Value.Four, true),\r\n        new StartingHand(Value.Four, Value.Two, true),\r\n        new StartingHand(Value.Three, Value.Two, true),\r\n        new StartingHand(Value.Ace, Value.Nine, false),\r\n        new StartingHand(Value.King, Value.Nine, false),\r\n        new StartingHand(Value.Queen, Value.Nine, false),\r\n        new StartingHand(Value.Jack, Value.Eight, false),\r\n        new StartingHand(Value.Ten, Value.Eight, false),\r\n        new StartingHand(Value.Eight, Value.Seven, false),\r\n        new StartingHand(Value.Seven, Value.Six, false),\r\n        new StartingHand(Value.Six, Value.Five, false),\r\n        new StartingHand(Value.Five, Value.Four, false),\r\n    ]\r\n}\r\n\r\n// getSklanskyValue takes a starting hand and returns the Sklansky rank\r\n// from 1 to 8, or -1 if it is unplayable.\r\nfunction getSklanskyValue(hand: StartingHand): number {\r\n    let rank: number;\r\n    for (rank = 1; rank < 9; rank++) {\r\n        let hands = SklanskyTable[rank]\r\n        let h: number;\r\n        for (h = 0; h < hands.length; h++) {\r\n            if (hand.equals(hands[h])) {\r\n                return rank;\r\n            }\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\n// Views\r\n\r\nfunction AnswerPanel(props: any) {\r\n    let selected: Set<number> = props.selected;\r\n    return (\r\n        <div>\r\n            <div className=\"App-answer-select\">\r\n                <button onClick={() => { props.onClickHandler(1) }} disabled={!selected.has(1)}>1</button>\r\n                <div><input type=\"checkbox\" checked={selected.has(1)} onChange={() => { props.onChangeHandler(1) }} /></div>\r\n            </div>\r\n            <div className=\"App-answer-select\" >\r\n                <button onClick={() => { props.onClickHandler(2) }} disabled={!selected.has(2)}>2</button>\r\n                <div><input type=\"checkbox\" checked={selected.has(2)} onChange={() => { props.onChangeHandler(2) }} /></div>\r\n            </div>\r\n            <div className=\"App-answer-select\">\r\n                <button onClick={() => { props.onClickHandler(3) }} disabled={!selected.has(3)}>3</button>\r\n                <div><input type=\"checkbox\" checked={selected.has(3)} onChange={() => { props.onChangeHandler(3) }} /></div>\r\n            </div>\r\n            <div className=\"App-answer-select\">\r\n                <button onClick={() => { props.onClickHandler(4) }} disabled={!selected.has(4)}>4</button>\r\n                <div><input type=\"checkbox\" checked={selected.has(4)} onChange={() => { props.onChangeHandler(4) }} /></div>\r\n            </div>\r\n            <div className=\"App-answer-select\">\r\n                <button onClick={() => { props.onClickHandler(5) }} disabled={!selected.has(5)}>5</button>\r\n                <div><input type=\"checkbox\" checked={selected.has(5)} onChange={() => { props.onChangeHandler(5) }} /></div>\r\n            </div>\r\n            <div className=\"App-answer-select\">\r\n                <button onClick={() => { props.onClickHandler(6) }} disabled={!selected.has(6)}>6</button>\r\n                <div><input type=\"checkbox\" checked={selected.has(6)} onChange={() => { props.onChangeHandler(6) }} /></div>\r\n            </div>\r\n            <div className=\"App-answer-select\">\r\n                <button onClick={() => { props.onClickHandler(7) }} disabled={!selected.has(7)}>7</button>\r\n                <div><input type=\"checkbox\" checked={selected.has(7)} onChange={() => { props.onChangeHandler(7) }} /></div>\r\n            </div>\r\n            <div className=\"App-answer-select\">\r\n                <button onClick={() => { props.onClickHandler(8) }} disabled={!selected.has(8)}>8</button>\r\n                <div><input type=\"checkbox\" checked={selected.has(8)} onChange={() => { props.onChangeHandler(8) }} /></div>\r\n            </div>\r\n            <div className=\"App-answer-select\">\r\n                <button onClick={() => { props.onClickHandler(-1) }} disabled={!selected.has(-1)}>never</button>\r\n                <div><input type=\"checkbox\" checked={selected.has(-1)} onChange={() => { props.onChangeHandler(-1) }} /></div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nfunction MessagePanel(props: any) {\r\n    return (\r\n        <div className={\"App-message\" + \"-\" + props.classSuffix}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype AppState = {\r\n    card1: Card,\r\n    card2: Card,\r\n    answer?: number,\r\n    selected: Set<number>,\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n\r\n        // init state\r\n        let selected = (new Set<number>()).add(1).add(2).add(3).add(4).add(5).add(6).add(7).add(8).add(-1);\r\n        this.state = { card1: new Card(Value.Ace, Suit.Clubs), card2: new Card(Value.Ace, Suit.Clubs), answer: undefined, selected: selected };\r\n        this.state = { ...this.resetHand() };\r\n\r\n        this.handleUserInput = this.handleUserInput.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n        this.resetHand = this.resetHand.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keypress', this.handleKeyPress);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keypress', this.handleKeyPress);\r\n    }\r\n\r\n    private handleKeyPress(event: any) {\r\n        console.log(\"keypress event: \", event.keyCode);\r\n        let code: number = event.keyCode;\r\n        if (code === 110) { // TODO: make this space bar\r\n            this.setState(this.resetHand());\r\n        } else if (code === 48) {\r\n            this.handleUserInput(-1);\r\n        } else if (code >= 49 && code <= 56) {\r\n            this.handleUserInput(code - 49 + 1)\r\n        }\r\n    }\r\n\r\n    private handleUserInput(val: number) {\r\n        console.log(\"user answer: \", val);\r\n        if (this.state.answer === undefined) {\r\n            this.setState({ ...this.state, answer: val });\r\n        }\r\n    }\r\n\r\n    private handleSelectChange(val: number) {\r\n        console.log(\"select changed: \", val);\r\n        let selected: Set<number> = this.state.selected;\r\n        if (selected.has(val)) {\r\n            selected.size === 1 ? alert(\"At least one option must be selected\") : selected.delete(val);\r\n        } else {\r\n            selected.add(val);\r\n        }\r\n        this.setState({ ...this.state, selected: selected });\r\n        if (!selected.has(val)) {\r\n            this.setState(this.resetHand());\r\n        }\r\n    }\r\n\r\n    private resetHand(): AppState {\r\n        let card1: Card = new Card(Value.Ace, Suit.Clubs)\r\n        let card2: Card = new Card(Value.Ace, Suit.Clubs);\r\n        let hand: StartingHand = new StartingHand(card1.value, card2.value, true);\r\n\r\n        while (card1.equals(card2) || !this.state.selected.has(getSklanskyValue(hand))) {\r\n            card1 = new Card(values[Math.floor(Math.random() * 13)], suits[Math.floor(Math.random() * 4)]);\r\n            card2 = new Card(values[Math.floor(Math.random() * 13)], suits[Math.floor(Math.random() * 4)]);\r\n            hand = new StartingHand(card1.value, card2.value, card1.suit === card2.suit);\r\n        }\r\n        return { ...this.state, card1: card1, card2: card2, answer: undefined };\r\n    }\r\n\r\n    public render() {\r\n        let hand = new StartingHand(this.state.card1.value, this.state.card2.value, this.state.card1.suit === this.state.card2.suit)\r\n        return (\r\n            <div className=\"App\">\r\n                <header>\r\n                    <h1 className=\"App-title\">Learn Your Sklansky Starting Hands!</h1>\r\n                </header>\r\n                <div className=\"App-instructions\" >\r\n                    Press numeric keys 1-8 to answer, 0 for never and 'n' to move to the next hand.\r\n                    </div>\r\n                <div>\r\n                    <img className=\"App-card\" src={`/svgs/${this.state.card1.toString()}.svg`} />\r\n                    <img className=\"App-card\" src={`/svgs/${this.state.card2.toString()}.svg`} />\r\n                </div>\r\n                <AnswerPanel onClickHandler={this.handleUserInput} onChangeHandler={this.handleSelectChange} selected={this.state.selected} />\r\n                {this.state.answer !== undefined && (\r\n                    (this.state.answer === getSklanskyValue(hand) && <MessagePanel classSuffix={\"correct\"} message={\"Correct!\"} />) ||\r\n                    (this.state.answer !== getSklanskyValue(hand) && <MessagePanel classSuffix={\"incorrect\"} message={\"Incorrect :(. Correct answer is \" + (getSklanskyValue(hand) !== -1 ? getSklanskyValue(hand) : \"never\") + \".\"} />))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL!,\r\n            window.location.toString()\r\n        );\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker) {\r\n                    installingWorker.onstatechange = () => {\r\n                        if (installingWorker.state === 'installed') {\r\n                            if (navigator.serviceWorker.controller) {\r\n                                // At this point, the old content will have been purged and\r\n                                // the fresh content will have been added to the cache.\r\n                                // It's the perfect time to display a 'New content is\r\n                                // available; please refresh.' message in your web app.\r\n                                console.log('New content is available; please refresh.');\r\n                            } else {\r\n                                // At this point, everything has been precached.\r\n                                // It's the perfect time to display a\r\n                                // 'Content is cached for offline use.' message.\r\n                                console.log('Content is cached for offline use.');\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            if (\r\n                response.status === 404 ||\r\n                response.headers.get('content-type')!.indexOf('javascript') === -1\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}